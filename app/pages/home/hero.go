package home

import (
	"github.com/gofred-io/gofred/breakpoint"
	"github.com/gofred-io/gofred/button"
	"github.com/gofred-io/gofred/column"
	"github.com/gofred-io/gofred/container"
	"github.com/gofred-io/gofred/grid"
	"github.com/gofred-io/gofred/icon"
	icondata "github.com/gofred-io/gofred/icon_data"
	"github.com/gofred-io/gofred/link"
	"github.com/gofred-io/gofred/options"
	"github.com/gofred-io/gofred/row"
	"github.com/gofred-io/gofred/spacer"
	"github.com/gofred-io/gofred/text"
	"github.com/gofred-io/gofred/widget"
)

func hero() widget.BaseWidget {
	return container.New(
		column.New(
			[]widget.BaseWidget{
				heroTitle(),
				heroSubtitle(),
				spacer.New(spacer.Height(8)),
				sampleCode(),
				spacer.New(spacer.Height(8)),
				cta(),
			},
			column.Gap(16),
			column.Flex(1),
			column.CrossAxisAlignment(options.AxisAlignmentTypeCenter),
			column.MainAxisAlignment(options.AxisAlignmentTypeCenter),
		),
		options.BackgroundColor("#2B799B"),
		options.Flex(1),
		options.Padding(breakpoint.All(32)),
	)
}

func heroTitle() widget.BaseWidget {
	return text.New(
		"Build responsive web apps in Go â€“ no JavaScript required",
		options.FontSize(24),
		options.FontColor("#FFFFFF"),
		options.FontWeight("600"),
		options.UserSelect(options.UserSelectTypeNone),
	)
}

func heroSubtitle() widget.BaseWidget {
	return text.New(
		"Write modern, reactive web applications with WebAssembly using only Go.",
		options.FontSize(18),
		options.FontColor("#FFFFFF"),
		options.FontWeight("400"),
		options.UserSelect(options.UserSelectTypeNone),
	)
}

func sampleCode() widget.BaseWidget {
	closeButton := container.New(
		widget.Nil,
		options.BackgroundColor("#FF5F58"),
		options.Height(breakpoint.All(16)),
		options.Width(breakpoint.All(16)),
		options.BorderRadius(8),
	)

	fullScreenButton := container.New(
		widget.Nil,
		options.BackgroundColor("#FFBD2E"),
		options.Height(breakpoint.All(16)),
		options.Width(breakpoint.All(16)),
		options.BorderRadius(8),
	)

	minimizeButton := container.New(
		widget.Nil,
		options.BackgroundColor("#28C941"),
		options.Height(breakpoint.All(16)),
		options.Width(breakpoint.All(16)),
		options.BorderRadius(8),
	)

	windowTitle := text.New(
		"main.go",
		options.FontSize(16),
		options.FontColor("#FFFFFF"),
		options.FontWeight("500"),
		options.UserSelect(options.UserSelectTypeNone),
	)

	titleBar := row.New(
		[]widget.BaseWidget{
			row.New(
				[]widget.BaseWidget{
					closeButton,
					fullScreenButton,
					minimizeButton,
				},
				row.MainAxisAlignment(options.AxisAlignmentTypeStart),
				row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
				row.Gap(8),
			),
			windowTitle,
			spacer.New(),
		},
		row.MainAxisAlignment(options.AxisAlignmentTypeStart),
		row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
		row.Gap(8),
	)

	packageName := row.New(
		[]widget.BaseWidget{
			text.New(
				"package",
				options.FontSize(14),
				options.FontColor("#4F8CBF"),
				options.FontWeight("400"),
				options.UserSelect(options.UserSelectTypeNone),
			),
			text.New(
				"main",
				options.FontSize(14),
				options.FontColor("#49B8A2"),
				options.FontWeight("400"),
				options.UserSelect(options.UserSelectTypeNone),
			),
		},
		row.MainAxisAlignment(options.AxisAlignmentTypeStart),
		row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
		row.Gap(6),
	)

	imports := column.New(
		[]widget.BaseWidget{
			row.New(
				[]widget.BaseWidget{
					text.New(
						"import",
						options.FontSize(14),
						options.FontColor("#AD77A8"),
						options.FontWeight("400"),
						options.UserSelect(options.UserSelectTypeNone),
					),
					text.New(
						"(",
						options.FontSize(14),
						options.FontColor("#E0BD04"),
						options.FontWeight("400"),
						options.UserSelect(options.UserSelectTypeNone),
					),
				},
				row.MainAxisAlignment(options.AxisAlignmentTypeStart),
				row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
				row.Gap(6),
			),
			row.New(
				[]widget.BaseWidget{
					spacer.New(spacer.Width(6)),
					text.New(
						"\"github.com/gofred-io/gofred-website/app\"",
						options.FontSize(14),
						options.FontColor("#B9836D"),
						options.FontWeight("400"),
						options.UserSelect(options.UserSelectTypeNone),
					),
				},
				row.MainAxisAlignment(options.AxisAlignmentTypeStart),
				row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
				row.Gap(6),
			),
			row.New(
				[]widget.BaseWidget{
					spacer.New(spacer.Width(6)),
					text.New(
						"\"github.com/gofred-io/gofred/application\"",
						options.FontSize(14),
						options.FontColor("#B9836D"),
						options.FontWeight("400"),
						options.UserSelect(options.UserSelectTypeNone),
					),
				},
				row.MainAxisAlignment(options.AxisAlignmentTypeStart),
				row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
				row.Gap(6),
			),
			row.New(
				[]widget.BaseWidget{
					text.New(
						")",
						options.FontSize(14),
						options.FontColor("#E0BD04"),
						options.FontWeight("400"),
						options.UserSelect(options.UserSelectTypeNone),
					),
				},
			),
		},
		column.MainAxisAlignment(options.AxisAlignmentTypeStart),
		column.CrossAxisAlignment(options.AxisAlignmentTypeStart),
		column.Gap(6),
	)

	mainFunc := column.New(
		[]widget.BaseWidget{
			row.New(
				[]widget.BaseWidget{
					text.New(
						"func",
						options.FontSize(14),
						options.FontColor("#4F8CBF"),
						options.FontWeight("400"),
						options.UserSelect(options.UserSelectTypeNone),
					),
					row.New(
						[]widget.BaseWidget{
							text.New(
								"main",
								options.FontSize(14),
								options.FontColor("#DCDCAA"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								"()",
								options.FontSize(14),
								options.FontColor("#E0BD04"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
						},
						row.MainAxisAlignment(options.AxisAlignmentTypeStart),
						row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
					),
					text.New(
						"{",
						options.FontSize(14),
						options.FontColor("#E0BD04"),
						options.FontWeight("400"),
						options.UserSelect(options.UserSelectTypeNone),
					),
				},
				row.MainAxisAlignment(options.AxisAlignmentTypeStart),
				row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
				row.Gap(6),
			),
			row.New(
				[]widget.BaseWidget{
					spacer.New(spacer.Width(6)),
					row.New(
						[]widget.BaseWidget{
							text.New(
								"application",
								options.FontSize(14),
								options.FontColor("#8AD1DE"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								".",
								options.FontSize(14),
								options.FontColor("#BCBCBC"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								"Run",
								options.FontSize(14),
								options.FontColor("#DCDCAA"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								"(",
								options.FontSize(14),
								options.FontColor("#AD77A8"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								"app",
								options.FontSize(14),
								options.FontColor("#8AD1DE"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								".",
								options.FontSize(14),
								options.FontColor("#BCBCBC"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								"New",
								options.FontSize(14),
								options.FontColor("#DCDCAA"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								"()",
								options.FontSize(14),
								options.FontColor("#4F8CBF"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
							text.New(
								")",
								options.FontSize(14),
								options.FontColor("#AD77A8"),
								options.FontWeight("400"),
								options.UserSelect(options.UserSelectTypeNone),
							),
						},
					),
				},
				row.MainAxisAlignment(options.AxisAlignmentTypeStart),
				row.CrossAxisAlignment(options.AxisAlignmentTypeStart),
				row.Gap(6),
			),
			text.New(
				"}",
				options.FontSize(14),
				options.FontColor("#E0BD04"),
				options.FontWeight("400"),
				options.UserSelect(options.UserSelectTypeNone),
			),
		},
		column.MainAxisAlignment(options.AxisAlignmentTypeStart),
		column.CrossAxisAlignment(options.AxisAlignmentTypeStart),
		column.Gap(6),
	)

	return container.New(
		column.New(
			[]widget.BaseWidget{
				titleBar,
				packageName,
				spacer.New(spacer.Height(8)),
				imports,
				spacer.New(spacer.Height(8)),
				mainFunc,
			},
			column.MainAxisAlignment(options.AxisAlignmentTypeStart),
			column.Gap(6),
		),
		options.BackgroundColor("#282A36"),
		options.Height(breakpoint.All(240)),
		options.BorderRadius(8),
		options.Padding(breakpoint.All(16)),
		options.MaxWidth(540),
		options.WidthP(breakpoint.All(0.5), breakpoint.XS(1.0), breakpoint.SM(1.0), breakpoint.MD(0.75)),
	)
}

func cta() widget.BaseWidget {
	return grid.New(
		[]widget.BaseWidget{
			link.New(
				button.New(
					text.New(
						"Get Started",
						options.FontFamily("Ubuntu"),
						options.FontSize(14),
						options.FontColor("#FFFFFF"),
						options.FontWeight("500"),
						options.UserSelect(options.UserSelectTypeNone),
					),
					options.Width(breakpoint.All(100)),
				),
				options.Href("/docs#getting-started"),
			),
			link.New(
				button.New(
					row.New(
						[]widget.BaseWidget{
							icon.New(
								icondata.GitHub,
								options.Fill("#FFFFFF"),
								options.Height(breakpoint.All(16)),
								options.Width(breakpoint.All(16)),
							),
							text.New(
								"GitHub",
								options.FontSize(14),
								options.FontColor("#FFFFFF"),
								options.FontWeight("500"),
								options.FontFamily("Ubuntu"),
								options.UserSelect(options.UserSelectTypeNone),
							),
						},
						row.MainAxisAlignment(options.AxisAlignmentTypeCenter),
						row.CrossAxisAlignment(options.AxisAlignmentTypeCenter),
						row.Gap(6),
					),
					options.BackgroundColor("#151B23"),
					options.Width(breakpoint.All(100)),
				),
				options.Href("https://github.com/gofred-io/gofred"),
				options.NewTab(true),
			),
		},
		options.ColumnGap(8),
		options.RowGap(8),
		options.ColumnCount(
			breakpoint.All(2),
			breakpoint.XS(1),
		),
	)
}
